{"version":3,"sources":["images/pngIcons/049-island.png","images/pngIcons/046-treasureChest.png","images/pngIcons/029-pirate.png","images/pngIcons/001-compass.png","images/Banners/Banner1.png","images/Logos/NoFriendsDefault.png","images/Logos/TrovePageDefault.png","utils/themeUtil.js","utils/Auth.js","pages/LogoutFunction.jsx","components/BrandLogo/index.js","components/Nav/index.js","components/LoginForm/index.js","utils/API.js","pages/LogInPage.js","components/Main/index.js","pages/LandingPage.js","components/SignUpForm/index.js","pages/SignupPage.js","components/EditProfileBtn/index.js","components/SaveBtn/index.js","components/Profile/index.js","components/SideBar/index.js","components/SearchBar/index.js","components/Avatar/index.js","components/ProfileBanner/index.js","components/EditBannerBtn/index.js","components/CustomizeBannerModal/index.js","pages/ProfilePage.js","components/AddItemBtn/index.js","components/AddTroveItemDialogModal/index.js","components/DiscoverItemCard/index.js","pages/DiscoverPage.js","components/NewFriendsDialogModal/index.js","components/NoFriends/index.js","components/FriendTable/index.js","pages/MyFriendsPage.js","components/EditTroveForm/index.js","components/EditTroveBtn/index.js","components/EditTroveDialogModal/index.js","components/ItemForm/index.js","components/AddItemDialogModal/index.js","components/DeleteBtn/index.js","components/DeleteTroveDialogModal/index.js","components/ShowItemsBtn/index.js","components/DeleteItemDialogModal/index.js","components/ItemCard/index.js","components/ItemDialogModal/index.js","components/TroveCard/index.js","components/NoTrove/index.js","components/MyTrove/index.js","components/TroveForm/index.js","components/NewTroveDialogModal/index.js","pages/TrovePage.js","App.js","registerServiceWorker.js","index.js","images/Logos/TroveLogo.png"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","fontFamily","h1","fontStyle","h2","h3","h4","h5","h6","overrides","MuiButton","root","borderRadius","Auth","token","localStorage","setItem","getItem","removeItem","LogoutFunction","props","deauthenticateUser","history","push","react_default","a","createElement","react","useStyles","makeStyles","logo","width","height","BrandLogo","classes","className","src","alt","display","appBar","zIndex","drawer","toolbarRoot","justifyContent","Nav","CssBaseline","AppBar","position","Toolbar","components_BrandLogo","react_router_dom","to","Button","color","alignItemsAndJustifyContent","alignItems","border","boxShadow","backgroundColor","LoginForm","_ref","successMessage","errors","onSubmit","onChange","user","console","log","Card","clsx","action","summary","TextField","placeholder","name","error","username","helperText","value","type","password","label","CardContent","API","login","userData","axios","post","signUp","dashboard","get","headers","Authorization","concat","findFriends","search","getTrove","addTrove","troveData","body","editTrove","troveId","put","deleteTrove","userid","delete","getFriends","addFriend","id","friend","updateUser","addItem","Item","getItems","itemId","addTroveItem","troveTitle","LoginPage","_useState","useState","_useState2","Object","slicedToArray","setErrors","_useState3","_useState4","setSuccessMessage","_useState5","_useState6","setUser","useEffect","storedMessage","Grid","components_Nav","components_LoginForm","event","preventDefault","then","res","authenticateUser","data","checkAuthenticateStatus","catch","err","message","e","objectSpread","defineProperty","target","content","flexGrow","layout","marginTop","Main","children","LandingPage","components_Main","item","alignContent","style","textAlign","animatedLogo","SignUpForm","email","variant","SignUpPage","components_SignUpForm","response","& > *","margin","spacing","extendedIcon","marginRight","EditProfileBtn","button","onClick","Edit_default","SaveProfileBtn","startIcon","background","maxWidth","padding","userInfo","flexDirection","Profile","editable","setEditable","_useState7","_useState8","setUsername","_useState9","_useState10","setPassword","_useState11","_useState12","setName","_useState13","_useState14","readonly","setReadonly","components_EditProfileBtn","noValidate","autoComplete","container","justify","xs","md","readOnly","fullWidth","InputLabelProps","shrink","rows","multiline","SaveBtn","flexShrink","drawerPaper","toolbar","mixins","icon","SideBar","Drawer","paper","List","ListItem","key","ListItemIcon","island","Typography","Divider","treasureChest","pirate","compass","shape","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","SearchBar","Search_default","InputBase","input","inputProps","aria-label","onSearch","small","large","teal","AvatarImage","Avatar","bannerImg","backgroundRepeat","ProfileBanner","banner","EditBannerBtn","imgchoices","CustomizeBannerDialog","onClose","selectedValue","open","handleListItemClick","Dialog","aria-labelledby","DialogTitle","map","imgOption","ListItemText","autoFocus","CustomizeBannerModal","_React$useState","React","_React$useState2","setOpen","_React$useState3","_React$useState4","setSelectedValue","components_EditBannerBtn","ProfilePage","setSecretData","getToken","direction","sm","components_SideBar","components_ProfileBanner","components_Profile","AddItemBtn","IconButton","size","AddCircle_default","fontSize","avatar","blue","AddTroveItemDialog","onItemChange","createItem","newItem","FormControl","formControl","InputLabel","htmlFor","Select","native","trove","troves","t","title","AddTroveItemDialogModal","components_AddItemBtn","setItemId","_id","media","paddingTop","backgroundSize","expand","transform","duration","shortest","expandOpen","red","DiscoverItemCard","CardHeader","imagesrc","component","url","description","price","CardActions","disableSpacing","DiscoverPage","items","setItems","setTrove","setTroveTitle","components_DiscoverItemCard","NewFriendsDialog","result","setResult","setSearch","parentNode","setFriends","friends","components_SearchBar","person","NewFriendsDialogModal","image","NoFriends","NoFriendsImg","table","minWidth","HeaderDiv","marginBottom","BodyDiv","noFriendsStyle","modalButton","FriendTable","Paper","elevation","span","searchResult","TableContainer","Table","TableBody","length","TableRow","TableCell","align","components_NoFriends","MyFriendsPage","setSearchResult","components_FriendTable","EditTroveForm","Edit","newTrove","imgurl","EditTroveBtn","EditTroveDialog","components_EditTroveForm","EditTroveDialogModal","components_EditTroveBtn","setTroveId","ItemForm","AddItemDialog","components_ItemForm","AddItemDialogModal","setNewItem","DeleteBtn","Delete_default","DeleteTroveDialog","onDelete","DeleteTroveDialogModal","components_DeleteBtn","ShowItemsBtn","OpenWithRounded_default","DeleteItemDialog","onItemDelete","ItemCard","DeleteItemDialogModal_DeleteTroveDialogModal","ItemDialog","components_ItemCard","components_ShowItemsBtn","TroveCard","ItemDialogModal_AddItemDialogModal","bodyDiv","NoTrove","NoTroveImg","MyTrove","components_TroveCard","components_NoTrove","TroveForm","onAdd","TroveDialog","components_TroveForm","NewTroveDialogModal","TrovePage","setNewTrove","components_MyTrove","App","authenticated","Authenticate","setAuthenticate","toggleAuthenticateStatus","isUserAuthenticated","ThemeProvider","react_router","exact","path","render","pages_LandingPage","assign","LogInPage","SignupPage","pages_ProfilePage","pages_TrovePage","FriendsPage","pages_LogoutFunction","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDom","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c2d791dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/049-island.805f3263.png\";","module.exports = __webpack_public_path__ + \"static/media/046-treasureChest.3980003d.png\";","module.exports = __webpack_public_path__ + \"static/media/029-pirate.8c7db220.png\";","module.exports = __webpack_public_path__ + \"static/media/001-compass.482c367e.png\";","module.exports = __webpack_public_path__ + \"static/media/Banner1.aba6bcec.png\";","module.exports = __webpack_public_path__ + \"static/media/NoFriendsDefault.bba6aa66.png\";","module.exports = __webpack_public_path__ + \"static/media/TrovePageDefault.9f2569fa.png\";","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#00d2b4',\n            main: '#c93146',\n            dark: '#FC6C4D'\n        },\n        secondary: {\n            light: '#a8f4e6',\n            main: '#00d2b4',\n            dark: '#1a8a98',\n        },\n    },\n    typography: {\n        fontFamily: 'Montserrat, Helvetica, Sans-Serif',\n        h1: {\n            fontFamily: 'Lato, Lucida-Grande, Tahoma, Sans-Serif', fontStyle: 'italic'\n        },\n        h2: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h3: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h4: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h5: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n        h6: 'Lato Lucida-Grande, Tahoma, Sans-Serif',\n    },\n    overrides: { //override a specific feature of the component we name below\n        MuiButton: {\n            root: {\n                borderRadius: '25px'\n            }\n        }\n    }\n});\n\nexport default theme\n","class Auth {\n\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   */\n  static authenticateUser(token) {\n    localStorage.setItem('token', token);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove a token from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n}\n\nexport default Auth;\n","import React, { Fragment } from 'react';\nimport Auth from '../utils/Auth';\n\n\nconst LogoutFunction = (props) => {\n\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    props.history.push('/');\n\n    return (\n      <Fragment>\n        <p>Logging out...</p>\n      </Fragment>\n    )\n\n}\n\nexport default LogoutFunction;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from \"../../images/Logos/TroveLogo.png\";\n\nconst useStyles = makeStyles(theme => ({\n    logo: {\n        width: '100px',\n        height: '50px'\n    },\n}));\n\nconst BrandLogo = () => {\n    const classes = useStyles()\n    \n    return(\n        <img className={ classes.logo } src={logo} alt=\"Trove\"/>\n    )\n \n}\n\nexport default BrandLogo;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport BrandLogo from '../BrandLogo/index';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'inline-block',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n\n    },\n    toolbarRoot: {\n        justifyContent: 'space-between',\n    },\n}));\n\nconst Nav = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar classes={{ root: classes.toolbarRoot }}>\n                    <BrandLogo />\n                    <Link to=\"/logout\"><Button color=\"inherit\" >Logout</Button></Link>\n                </Toolbar>\n            </AppBar>\n        </Fragment>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst LoginForm = ({successMessage, errors, onSubmit, onChange, user}) => {\n  console.log(successMessage)\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Username\"\n          name=\"username\"\n          error={user.username === \"\"}\n          helperText={user.username === \"\" ? errors.username : ' '}\n          onChange={onChange}\n          value={user.username}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          error={user.password === \"\"}\n          helperText={user.password === \"\" ? errors.name : ' '}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Login</Button>\n      </div>\n\n      <CardContent >Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardContent>\n    </form>\n  </Card>\n)};\n\nexport default LoginForm;","import axios from \"axios\";\n\n//methods for interacting with API Auth routes\nexport default {\n   login: userData =>\n      axios.post(\"/auth/login\", userData),\n   signUp: userData =>\n      axios.post('/auth/signup', userData),\n   dashboard: token =>\n      axios.get('/api/profile', { headers: { Authorization: `bearer ${token}` } }),\n   findFriends: (search, token) => {\n      return axios.get('/api/search/friends/' + search, { headers: { Authorization: `bearer ${token}` } })\n   },\n   getTrove: (userData, token) => {\n      console.log(\"Big API\", userData)\n      return axios.get('/api/user/trove/' + userData, { headers: { Authorization: `bearer ${token}` } })\n   },\n   addTrove: (userData, troveData) => {\n      return axios.post(\"/auth/trove/\" + userData, { body: troveData })\n   },\n   editTrove: (troveId, troveData) => {\n      return axios.put(\"/auth/trove/\" + troveId, { body: troveData })\n   },\n   deleteTrove: (troveId, userid) => {\n      console.log(troveId, userid)\n      return axios.delete(\"/auth/trove/\" + troveId + \"/\" + userid)\n   },\n   getFriends: (userData, token) =>\n      axios.get('/api/friends/' + userData, { headers: { Authorization: `bearer ${token}` } }),\n   addFriend: (userData) => {\n      return axios.put(\"/auth/friends/\" + userData.id + \"/\" + userData.friend)\n   },\n   updateUser: (userData, token) => {\n      return axios.put('/auth/profile' + userData, { headers: { Authorization: `bearer ${token}` }, body: userData })\n   },\n   addItem: (troveId, Item) => {\n      console.log(troveId, Item);\n      return axios.post('/auth/trove/item/'+ troveId, {body: Item} )\n   },\n   getItems: (token) => {\n      return axios.get('/auth/items/', { headers: { Authorization: `bearer ${token}` } })\n   },\n   removeItem: (troveId, itemId) => {\n      return axios.delete(\"/auth/trove/item/\" + troveId + \"/\" + itemId)\n   },\n   addTroveItem: (troveTitle, itemId) => {\n      return axios.put('/auth/trove/item/'+ itemId, {troveTitle})\n   }\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport Nav from '../components/Nav';\nimport Grid from '@material-ui/core/Grid';\nimport LoginForm from '../components/LoginForm';\nimport API from '../utils/API';\n\nconst LoginPage = (props) => {\n\n  // set the initial component state\n\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  })\n\n\n  useEffect(() => {\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n\n    setSuccessMessage(successMessage);\n    console.log(successMessage)\n\n  }, [])\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n\n    const { username, password } = user;\n\n    API.login({ username, password }).then(res => {\n      console.log(res)\n\n      // save the token\n      Auth.authenticateUser(res.data.token);\n\n      // update authenticated state\n      props.checkAuthenticateStatus();\n\n      // redirect signed in user to dashboard\n      props.history.push('/profile');\n\n    }).catch((err) => {\n      console.log(err)\n\n      const errors = err.data.errors ? err.data.errors : {};\n      errors.summary = err.data.message;\n\n      setErrors(\n        errors\n      );\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      setErrors({\n        errors: {}\n      })\n    }\n  }, [])\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = (e) => setUser({\n    ...user,\n    [e.target.name]: e.target.value,\n  });\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <Fragment>\n      <Grid>\n\n        <Nav />\n        <br></br>\n\n\n        <LoginForm\n          onSubmit={processForm}\n          onChange={changeUser}\n          errors={errors}\n          successMessage={successMessage}\n          user={user}\n        />\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default LoginPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        layout: {\n            marginTop:'100px',\n        }\n    },\n}));\n\nconst Main = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.content}>\n            {children}\n        </main>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Main from '../components/Main'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nimport animatedLogo from '../images/Logos/TroveLogo.png'\n// import donutGIF from '../images/Donut-Chest.gif'\n\n\nconst LandingPage = (props) => {\n    console.log(props)\n    return (\n        \n        <Main>\n            <Grid item alignContent=\"center\">\n                <div style={{ textAlign: 'center' }}\n                // style={{ backgroundImage: `url(${donutGIF})`, backgroundSize: 'cover', backgroundPosition: \"center\", height: \"100vh\" }}\n                >\n                    <img src={animatedLogo} alt=\"Trove Logo\" width=\"350px\" />\n                    <br></br>\n                    <Link to=\"/signup\"><Button>Sign Up</Button></Link>\n                    <Link to=\"/login\"><Button>Login</Button></Link>\n                </div>\n            </Grid>\n        </Main>\n\n    )\n}\n\nexport default LandingPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst SignUpForm = ({errors, user, onChange, onSubmit}) =>{\nconsole.log(user)\nconst classes = useStyles();\n\nreturn(\n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Sign Up</h2>\n      {console.log(errors.summary)}\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          error={user.username === \"\"}\n          helperText={user.username === \"\" ? errors.username : ' '}\n          onChange={onChange}\n          value={user.username}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          error={user.name === \"\"}\n          helperText={user.name === \"\" ? errors.name : ' '}\n          onChange={onChange}\n          value={user.name}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        type=\"text\"\n          label=\"Email\"\n          name=\"email\"\n          error={user.email === \"\"}\n          helperText={user.email === \"\" ? errors.email : ' '}\n          onChange={onChange}\n          value={user.email}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n        \n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          error={user.password === \"\"}\n          helperText={user.password === \"\" ? errors.name : ' '}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button variant=\"outlined\" type=\"submit\" label=\"Create New Account\" primary=\"true\">Create User</Button>\n      </div>\n\n      <CardContent>Already have an account? <Link to={'/login'}>Log in</Link></CardContent>\n    </form>\n  </Card>\n)};\n\nexport default SignUpForm;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport SignUpForm from '../components/SignUpForm';\nimport API from '../utils/API';\nimport Nav from '../components/Nav';\nimport Grid from '@material-ui/core/Grid';\n\nconst SignUpPage = (props) => {\n  // set the initial component state\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: ''\n  })\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n\n  const processForm = (event) => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { username, name, email, password } = user;\n\n    //const formData = `email=${email}&password=${password}`;\n    API.signUp({ username, name, email, password }).then(res => {\n      // change the component-container state\n      // set a message\n      localStorage.setItem('successMessage', res.data.message);\n\n      // redirect user after sign up to login page\n      props.history.push('/login');\n      setErrors({\n        errors: {},\n      });\n\n    }).catch(({ response }) => {\n      console.log(response)\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors(\n        errors\n      );\n    });\n  }\n\n  useEffect(() => {\n    return () => {\n      setErrors({\n        errors: {}\n      })\n    }\n  }, [])\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = (e) => setUser(\n    {\n    ...user,\n    \n    [e.target.name]: e.target.value,\n  });\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <Fragment>\n<Grid>\n   <Nav />\n    <SignUpForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      user={user}\n    /> \n    </Grid>\n     </Fragment>\n  );\n\n\n}\n\nexport default SignUpPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\nconst EditProfileBtn = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={props.onClick}\n                id={props.id}\n            >\n                <EditIcon />\n            </Button>\n        </div>\n    );\n}\nexport default EditProfileBtn","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport SaveIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst SaveProfileBtn = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                variant=\"contained\"\n                color=\"Primary\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n            >\n                Save\n      </Button>\n        </div>\n    );\n}\n\nexport default SaveProfileBtn\n\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport { maxWidth } from '@material-ui/system';\nimport EditProfileBtn from '../EditProfileBtn';\nimport SaveProfileBtn from '../SaveBtn'\nimport { set } from 'mongoose';\nimport API from '../../utils/API'\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: '10px',\n    margin: '50px auto',\n    maxWidth: '800px',\n    padding: '20px'\n  },\n  userInfo: {\n    borderRadius: '10px',\n    margin: '10px auto'\n  },\n  display: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  }\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const [value, setValue] = useState('Controlled');\n  const [editable, setEditable] = useState(false);\n  const [hidden, setHidden] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [readonly, setReadonly] = useState(true);\n\n  const handleSave = event => {\n    setEditable(false)\n    API.updateUser(username, password, name)\n\n  }\n\n  const handleEdit = () => {\n    setEditable(true)\n    setReadonly(false)\n  }\n\n  const onChange = (e) => {\n    props.setUser({\n      ...props.user,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  return (\n    <div>\n      <div className={classes.background}>\n        <h3>Username: {props.user.username}</h3>\n        <h3>Name: {props.user.name}</h3>\n        <hr />\n        <h3>About Me: </h3>\n        <div className={classes.display}><EditProfileBtn onClick={handleEdit} /></div>\n        {editable\n          ?\n          <div>\n            <form className={classes.background} noValidate autoComplete=\"off\">\n              <Grid container alignItems='center' justify='center' spacing={2}>\n                <Grid item xs={6} md={6}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Username\"\n                    name='username'\n                    placeholder={props.user.username}\n                    value={props.user.username}\n                    onChange={e => setUsername(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={6} md={6}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Name\"\n                    name=\"name\"\n                    value={props.user.name}\n                    placeholder={props.user.name}\n                    onChange={e => setName(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={props.user.password}\n                    placeholder={props.user.password}\n                    onChange={e => setPassword(e.target.value)}\n                    readOnly={readonly}\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    id=\"filled-full-width\"\n                    label=\"About Me\"\n                    name=\"about\"\n                    value=\"\"\n                    readOnly={readonly}\n                    rows='8'\n                    placeholder=\"Tell us about yourself...\"\n                    fullWidth\n                    multiline\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <SaveProfileBtn onClick={handleSave} />\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          : null\n        }\n      </div>\n\n\n    </div >\n\n  );\n}\n\nexport default Profile\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport island from '../../images/pngIcons/049-island.png'\nimport treasureChest from '../../images/pngIcons/046-treasureChest.png'\nimport pirate from '../../images/pngIcons/029-pirate.png'\nimport compass from '../../images/pngIcons/001-compass.png'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n      },\n      drawer: {\n        width: \"15%\",\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: \"15%\",\n      },\n    content: {\n        width: \"100%\",\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n    toolbar: theme.mixins.toolbar,\n    icon: {\n        width: '24px',\n        height: '24px',\n    }\n}));\n\nconst SideBar = () => {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}>\n            <div className={classes.toolbar} />\n            <List>\n                {/* <ListItem button key='Home'>\n                        <ListItemIcon> <img className={classes.icon} src={island} alt=\"home\" /> </ListItemIcon>\n                        <Link to=\"/profile\"><Typography>Home</Typography></Link>\n                    </ListItem>\n                    <Divider /> */}\n                <ListItem button key='MyProfile'>\n                    <ListItemIcon><img className={classes.icon} src={island} alt=\"Profile\" /></ListItemIcon>\n                    <Link to=\"/profile\"><Typography>My Profile</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='MyTrove'>\n                    <ListItemIcon><img className={classes.icon} src={treasureChest} alt=\"Trove\" /></ListItemIcon>\n                    <Link to=\"/trove\"><Typography>My Trove</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='Friends'>\n                    <ListItemIcon><img className={classes.icon} src={pirate} alt='Friends' /></ListItemIcon>\n                    <Link to=\"/friends\"><Typography>My Friends</Typography></Link>\n                </ListItem>\n                <Divider />\n                <ListItem button key='Discover'>\n                    <ListItemIcon><img className={classes.icon} src={compass} alt='Discover' /></ListItemIcon>\n                    <Link to=\"/discover\"><Typography>Discover</Typography></Link>\n                </ListItem>\n            </List>\n            <Divider />\n\n        </Drawer>\n    );\n}\n\nexport default SideBar;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor:'white',\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    \n}));\n\nconst SearchBar = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange = {props.onChange}\n                />\n                <Button color=\"inherit\" onClick={props.onSearch}>Search</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport clsx from 'clsx';\nimport { spacing } from '@material-ui/system';\nimport SearchBar from '../SearchBar'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    large: {\n        width: theme.spacing(30),\n        height: theme.spacing(30),\n    },\n    teal: {\n        color: 'white',\n        backgroundColor: theme.palette.secondary.dark,\n    },\n    spacing: {\n        marginTop: \"-150px\",\n        marginLeft: \"55px\"\n    },\n}));\n\nexport default function AvatarImage(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Avatar alt={props.user.username} src=\"/static/images/avatar/1.jpg\" className={clsx(classes.large, classes.teal, classes.spacing)} />\n        </div>\n    );\n}","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport banner from '../../images/Banners/Banner1.png'\n\nconst useStyles = makeStyles(theme => ({\n    teal: {\n        color: 'white',\n        marginTop: '90px',\n        marginRight: '15px',\n        backgroundColor: theme.palette.secondary.light,\n        height: '250px',\n        borderRadius: '10px',\n        padding: '10px',\n\n    },\n    bannerImg: {\n        height: \"250px\",\n        width: \"auto\",\n        borderRadius: \"10px\",\n        padding: \"15px\",\n        backgroundRepeat: \"repeat-x\"\n    }\n}));\n\nconst ProfileBanner = () => {\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <Grid className={classes.teal} >\n                <img src={banner} className={classes.bannerImg} />\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default ProfileBanner","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    spacing: {\n        marginTop: \"-33vh\",\n        marginLeft: \"145vh\",\n    }\n}));\n\nconst EditBannerBtn = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={clsx(classes.button, classes.spacing)}\n                startIcon={<EditIcon />}\n            >\n                Customize\n      </Button>\n        </div>\n    );\n}\n\nexport default EditBannerBtn;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport EditBannerBtn from \"../EditBannerBtn\";\n// import { blue } from '@material-ui/core/colors';\n\nconst imgchoices = [''];\n// const useStyles = makeStyles({\n//     avatar: {\n//         backgroundColor: blue[100],\n//         color: blue[600],\n//     },\n// });\n\nfunction CustomizeBannerDialog(props) {\n    // const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = value => {\n        onClose(value);\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n            <List>\n                {imgchoices.map(imgOption => (\n                    <ListItem button onClick={() => handleListItemClick(imgOption)} key={imgOption}>\n                        <ListItemText primary={imgOption} />\n                    </ListItem>\n                ))}\n\n                <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n                    <ListItemText primary=\"Add account\" />\n                </ListItem>\n            </List>\n        </Dialog>\n    );\n}\n\nCustomizeBannerDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function CustomizeBannerModal() {\n    const [open, setOpen] = React.useState(false);\n    const [selectedValue, setSelectedValue] = React.useState(imgchoices[1]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = value => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <div>\n            <EditBannerBtn variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Customize\n            </EditBannerBtn>\n            <CustomizeBannerDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n        </div>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport Profile from '../components/Profile/index'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport API from '../utils/API';\nimport Avatar from '../components/Avatar'\nimport ProfileBanner from '../components/ProfileBanner'\nimport Grid from '@material-ui/core/Grid'\nimport CustomizeBannerModal from '../components/CustomizeBannerModal'\n\nconst ProfilePage = (props) => {\n    const [secretData, setSecretData] = useState('');\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        // update authenticated state on logout\n        props.checkAuthenticateStatus()\n    }, [])\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setSecretData(res.data.message)\n                setUser(res.data.user)\n            });\n    }, [])\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <Grid item xs={12} alignItems='center' justify='center'>\n                        <ProfileBanner />\n                        <Avatar user={user} />\n                        <CustomizeBannerModal />\n                        <Profile user={user} setUser={setUser} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n};\n\nexport default ProfilePage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst AddItemBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n\n            <AddCircleIcon color='primary' fontSize='large' />\n        </IconButton>\n\n    );\n}\n\nexport default AddItemBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport AddItemBtn from '../AddItemBtn'\nimport Card from '@material-ui/core/Card';\nimport clsx from 'clsx';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction AddTroveItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open, onItemChange, createItem, newItem } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"add-item\" open={open}>\n      <DialogTitle id=\"add-item\">Add Item</DialogTitle>\n      <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n        <form>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"age-native-simple\">Trove Title</InputLabel>\n            <Select\n              native\n              value={props.troveTitle}\n              onChange={props.onChange}\n              inputProps={{\n                name: 'title',\n                id: 'age-native-simple',\n              }}\n            >\n              {props.trove.troves ? props.trove.troves.map((t, key) => {\n                return <option value={t.title}>{t.title}</option>\n              }) : null}\n\n            </Select>\n\n          </FormControl>\n          <div className=\"button-line\">\n            <Button type=\"submit\" label=\"Add Item\" primary=\"true\" onClick={props.addItem}>Add Item</Button>\n          </div>\n        </form>\n\n\n      </Card>\n    </Dialog>\n  );\n}\n\nAddTroveItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddTroveItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setItemId(props.item._id)\n    console.log(\"Add Button\", props.item._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <AddItemBtn aria-label=\"edit\" onClick={handleClickOpen} />\n      <AddTroveItemDialog open={open} onClose={handleClose} item={props.item} setItem={props.setItem} onChange={props.onChange} troveTitle={props.troveTitle} trove={props.trove} addItem={props.addItem} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport AddTroveItemDialogModal from '../AddTroveItemDialogModal';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst DiscoverItemCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} id={props.key}>\n            <CardHeader title={props.item.title} />\n            <img src={props.item.imagesrc} alt={props.item.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Url:</b> <Link to={props.item.url}>{props.item.url}</Link>\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Description:</b> {props.item.description}\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Price:</b> {props.item.price}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <AddTroveItemDialogModal item={props.item} setItemId={props.setItemId} onChange={props.onChange} troveTitle={props.troveTitle} trove={props.trove} addItem={props.addItem}/>\n            </CardActions>\n        </Card >\n    );\n}\nexport default DiscoverItemCard;","import React, { Fragment, useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport Avatar from '../components/Avatar'\nimport ProfileBanner from '../components/ProfileBanner'\nimport DiscoverItemCard from '../components/DiscoverItemCard'\nimport API from '../utils/API';\nimport Auth from '../utils/Auth';\n\nconst DiscoverPage = (props) => {\n\n    const [user, setUser] = useState({});\n    const [items, setItems] = useState([]);\n    const [trove, setTrove] = useState({});\n    const [troveTitle, setTroveTitle] =useState('');\n    const [itemId, setItemId] = useState({});\n\n    console.log(user)\n    console.log(trove)\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                API.getTrove(res.data.user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n            });\n    }, [])\n\n    useEffect(() => {\n        API.getItems()\n            .then(res => {\n                console.log(res.data)\n                setItems(res.data)\n            });\n    }, [])\n\n    const onChange = (e) => {\n        setTroveTitle(e.target.value)\n        console.log(e.target.value)\n    };\n\n    const addItem = () => {\n        console.log(troveTitle, itemId)\n        API.addTroveItem(troveTitle, itemId).then(res =>{\n            console.log(res.data)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <ProfileBanner />\n                    <Avatar user={user} />\n                    {items\n                ? items.map((item, key) => {\n                    return (\n                        <Grid item xs={4} md={3} key={key}>\n                            <DiscoverItemCard item={item} setItemId={setItemId} onChange={onChange} troveTitle={troveTitle} trove={trove} addItem={addItem}/>\n                        </Grid>)\n                })\n\n                : <Grid container alignItems='center' justify='center' spacing={2}>\n                    <Grid item>\n                        <h3>No Items</h3>\n                    </Grid>\n                </Grid>\n            }\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n}\n\nexport default DiscoverPage","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport API from '../../utils/API'\nimport Auth from '../../utils/Auth'\nimport SearchBar from '../SearchBar'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction NewFriendsDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n\n  const { onClose, open, selectedValue } = props;\n  const [result, setResult] = useState([]);\n  const [search, setSearch] = useState();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const onChange = (e) => setSearch(\n    e.target.value\n  );\n\n  const onSearch = () => {\n    API.findFriends(search, Auth.getToken()).then(res => {\n      setResult(res.data)\n    })\n  }\n\n  const addFriend = (e) => {\n    console.log(Auth.getToken())\n    console.log(props.user)\n    var data={id: props.user._id, friend: e.target.parentNode.id}\n    API.addFriend(data, Auth.getToken()).then((res) =>{\n      props.setFriends(res.data.friends)\n    })\n\n  }\n\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\n      <DialogTitle id=\"simple-dialog-title\">Find New Friends</DialogTitle>\n      {/* <SearchBar className={classes.search} onChange={onChange} onSearch={onSearch} />  */}\n\n      <SearchBar className={classes.search} onChange={onChange} onSearch={onSearch} />\n\n      {result ? result.map((person, key) => {\n        console.log(person)\n        return <div><li key={person._id}>{person.name}<Button id={person._id} variant=\"outlined\" color=\"primary\" onClick={addFriend}>Add Friend</Button></li></div>\n      }) : console.log(\"error\")}\n\n    </Dialog>\n  );\n}\n\nexport default function NewFriendsDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Find Friends\n      </Button>\n      <NewFriendsDialog open={open} onClose={handleClose} setFriends={props.setFriends} user={props.user}/>\n    </div>\n  );\n}\n\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoFriendsImg from \"../../images/Logos/NoFriendsDefault.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    image: {\r\n        width: '950px',\r\n        height: '700px'\r\n    },\r\n}));\r\n\r\nconst NoFriends = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <img className={classes.image} src={NoFriendsImg} alt=\"No Friends\"/>\r\n    )\r\n \r\n}\r\n\r\nexport default NoFriends;","import React, { useState, Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport theme from '../../utils/themeUtil';\nimport NoFriends from '../NoFriends/index';\nimport NewFriendsDialogModal from '../NewFriendsDialogModal';\nimport API from '../../utils/API';\nimport Auth from '../../utils/Auth';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600,\n  },\n\n  HeaderDiv: {\n    backgroundColor: theme.palette.secondary.light,\n    fontSize: '20px',\n    textAlign: 'center',\n    padding: '10px',\n    borderRadius: '5px',\n    marginBottom: '15px',\n  },\n\n  BodyDiv: {\n    fontSize: '20px',\n    textAlign: 'center',\n    padding: '10px',\n    borderRadius: '5px',\n    marginBottom: '15px',\n  },\n\n  layout: {\n    marginTop: '20px',\n    marginBottom: '50px',\n    marginRight: '50px',\n  },\n  avatar: {\n    height: '5px',\n    width: '5px',\n  },\n  noFriendsStyle: {\n    margin: '0 auto'\n  },\n  modalButton: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  }\n\n});\n\n\nconst FriendTable = (props) => {\n  const classes = useStyles();\n  const [search, setSearch] = useState();\n\n  console.log(props.friends)\n\n\n  const onChange = (e) => setSearch(\n    e.target.value\n  );\n\n  const onSearch = () => {\n    API.findFriends(search, Auth.getToken()).then(res => {\n      console.log(res.data)\n    })\n  }\n\n  return (\n    <Fragment>\n      <Grid className={classes.layout}>\n        <Paper elevation={1} className={classes.HeaderDiv}>\n          <div className={classes.span}>\n            <Grid container spacing={3}>\n              <Grid item xs>\n\n              </Grid>\n              <Grid item xs>\n                Your Friends\n            </Grid>\n              <Grid item xs className={classes.modalButton}>\n                <NewFriendsDialogModal onChange={onChange} onSearch={onSearch} searchResult={props.searchResult} setFriends={props.setFriends} user={props.user} />\n              </Grid>\n            </Grid>\n          </div>\n        </Paper >\n      </Grid >\n      <Grid className={classes.layout}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableBody>\n              {props.friends.length\n                ? (\n                  props.friends.map((friend) => {\n                    return <TableRow key={friend.name}>\n                      <TableCell align=\"center\">Avatar</TableCell>\n                      <TableCell align=\"center\">{friend.username}</TableCell>\n                      <TableCell align=\"center\">{friend.name}</TableCell>\n                      <TableCell align=\"center\">Trove</TableCell>\n                      <TableCell align=\"center\">Delete</TableCell>\n                    </TableRow>\n                  })\n                )\n                : <Paper elevation={1} className={classes.BodyDiv}>\n                  <div>\n                    <NoFriends />\n                  </div>\n                </Paper>\n\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid >\n    </Fragment>\n  );\n}\nexport default FriendTable;","import React, { useState, useEffect, Fragment } from 'react'\nimport Nav from '../components/Nav'\nimport SideBar from '../components/SideBar'\nimport NewFriendsDialogModal from '../components/NewFriendsDialogModal'\nimport FriendTable from '../components/FriendTable'\nimport API from '../utils/API'\nimport Auth from '../utils/Auth'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    layout: {\n        marginTop: '75px',\n    },\n})\n\nconst MyFriendsPage = () => {\n    const classes = useStyles();\n    const [search, setSearch] = useState();\n    const [user, setUser] = useState();\n    const [friends, setFriends] = useState([]);\n    const [searchResult, setSearchResult] = useState();\n\n    console.log(search)\n    console.log(user)\n    console.log(friends)\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                API.getFriends(res.data.user._id, Auth.getToken()).then(friend => {\n                    // setFriends(res.data.user.friends)\n                    console.log(friend.data.friends)\n                    setFriends(friend.data.friends)\n\n                });\n            })\n    }, [])\n\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10} className={classes.layout}>\n                    <FriendTable friends={friends} setFriends={setFriends} user={user} searchResult={searchResult} setSearchResult={setSearchResult} />\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default MyFriendsPage","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst EditTroveForm = ({Edit, onChange, trove, newTrove}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={Edit}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onChange}\n          error={trove.title === \"\"}\n          value={newTrove.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onChange}\n          error={trove.description === \"\"}\n          value={newTrove.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imgurl\"\n          onChange={onChange}\n          error={trove.imgurl === \"\"}\n          value={newTrove.imgurl}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Save</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default EditTroveForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst EditTroveBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n                \n            <EditIcon color='primary' fontSize='large'/>\n        </IconButton>\n    );\n}\n\nexport default EditTroveBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport EditTroveForm from '../EditTroveForm'\nimport EditTroveBtn from '../EditTroveBtn';\n\nfunction EditTroveDialog(props) {\n  const { onClose, selectedValue, open, onChange, Edit, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} onChange={onChange} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Edit Trove Details</DialogTitle>\n      <EditTroveForm \n        onChange ={onChange}\n        Edit = {Edit}\n        trove = {trove}\n        newTrove={props.newTrove}\n      />\n    </Dialog>\n  );\n}\n\nEditTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function EditTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n    console.log(props.trove._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <EditTroveBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <EditTroveDialog open={open} onClose={handleClose} trove={props.trove} onChange={props.onChange} Edit={props.Edit} newTrove={props.newTrove}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none',\n    margin: '15px'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst ItemForm = ({createItem, onItemChange, newItem}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={createItem}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Product URL\"\n          name=\"url\"\n          onChange={onItemChange}\n          error={newItem.url === \"\"}\n          value={newItem.url}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onItemChange}\n          error={newItem.title === \"\"}\n          value={newItem.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Price\"\n          name=\"price\"\n          onChange={onItemChange}\n          error={newItem.price === \"\"}\n          value={newItem.price}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onItemChange}\n          error={newItem.description === \"\"}\n          value={newItem.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imagesrc\"\n          onChange={onItemChange}\n          error={newItem.imagesrc === \"\"}\n          value={newItem.imagesrc}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Add Item\" primary=\"true\" >Submit</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default ItemForm;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport AddItemBtn from '../AddItemBtn'\nimport ItemForm from '../ItemForm'\nimport Card from '@material-ui/core/Card';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction AddItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open, onItemChange, createItem, newItem } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Add Item</DialogTitle>\n      <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n        <ItemForm\n          onItemChange={onItemChange}\n          createItem={createItem}\n          newItem={newItem}\n        />\n      </Card>\n    </Dialog>\n  );\n}\n\nAddItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n    console.log(\"Add Button\", props.trove._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <AddItemBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <AddItemDialog open={open} onClose={handleClose} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst DeleteBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n                \n            <DeleteIcon color='primary' fontSize='large'/>\n        </IconButton>\n    );\n}\n\nexport default DeleteBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteBtn from '../DeleteBtn'\nimport Button from '@material-ui/core/Button'\n\nfunction DeleteTroveDialog(props) {\n  console.log(props)\n  const { onClose, selectedValue, open, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    \n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Delete Trove?</DialogTitle>\n      <Button type='submit' variant='outlined' onClick={props.onDelete}>Delete</Button>\n    </Dialog>\n  );\n}\n\nDeleteTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function DeleteTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    console.log(\"Delete id\", props.trove._id)\n    props.setTroveId(props.trove._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <DeleteBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <DeleteTroveDialog open={open} onClose={handleClose} trove={props.trove} onChange={props.onChange} onDelete={props.onDelete} newTrove={props.newTrove}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport OpenWithRoundedIcon from '@material-ui/icons/OpenWithRounded';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst ShowItemsBtn = (props) => {\n    const classes = useStyles();\n\n    return (\n        <IconButton\n            className={classes.root}\n            color='primary'\n            onClick={props.onClick}\n            size='medium'\n            id={props.id}>\n\n            <OpenWithRoundedIcon color='primary' fontSize='large' />\n        </IconButton>\n\n    );\n}\n\nexport default ShowItemsBtn\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteBtn from '../DeleteBtn'\nimport Button from '@material-ui/core/Button'\n\nfunction DeleteItemDialog(props) {\n  console.log(props)\n  const { onClose, selectedValue, open, trove } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    \n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"edit-trove\" open={open} trove={trove}>\n      <DialogTitle id=\"edit-trove\">Delete Item?</DialogTitle>\n      <Button type='submit' variant='outlined' onClick={props.onItemDelete}>Delete</Button>\n    </Dialog>\n  );\n}\n\nDeleteItemDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function DeleteTroveDialogModal(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    console.log(\"Delete id\", props.item._id)\n    props.setItemId(props.item._id)\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <DeleteBtn aria-label=\"edit\" id={props.item._id} onClick={handleClickOpen} />\n      <DeleteItemDialog open={open} onClose={handleClose} item={props.item} onItemDelete={props.onItemDelete}/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteItemDialogModal from '../DeleteItemDialogModal'\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst ItemCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} id={props.key}>\n            <CardHeader title={props.item.title} />\n            <img src={props.item.imagesrc} alt={props.item.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Url:</b> <Link to={props.item.url}>{props.item.url}</Link>\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Description:</b> {props.item.description}\n                </Typography>\n                <br />\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n                    <b>Price:</b> {props.item.price}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <DeleteItemDialogModal setItemId={props.setItemId} item={props.item} onItemDelete={props.onItemDelete}/>\n            </CardActions>\n        </Card >\n    );\n}\nexport default ItemCard;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport ShowItemsBtn from '../ShowItemsBtn'\nimport Grid from '@material-ui/core/Grid'\nimport ItemCard from '../ItemCard'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction ItemDialog(props) {\n  console.log(props)\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Trove Items</DialogTitle>\n      {props.trove.items ? props.trove.items.map((item, key) => {\n        return (\n          <Grid item xs={12} md={12} key={key}>\n            <ItemCard item={item} key={key} setItemId={props.setItemId} onItemDelete={props.onItemDelete}/>\n          </Grid>)\n      }) : null}\n    </Dialog>\n  );\n}\n\nItemDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function AddItemDialogModal(props) {\n  console.log(props)\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (e) => {\n    setOpen(true);\n    props.setTroveId(props.trove._id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <ShowItemsBtn aria-label=\"edit\" id={props.trove._id} onClick={handleClickOpen} />\n      <ItemDialog open={open} onClose={handleClose} item={props.item} trove={props.trove} setItemId={props.setItemId} onItemDelete={props.onItemDelete} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport EditTroveDialogModal from '../EditTroveDialogModal';\nimport AddItemDialogModal from '../AddItemDialogModal'\nimport DeleteTroveDialogModal from '../DeleteTroveDialogModal'\nimport ItemDialogModal from '../ItemDialogModal'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        paddingTop: '56.25%', // 16:9\n        backgroundSize: 'contain'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\nconst TroveCard = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <Card className={classes.root} id={props.trove._id}>\n            <CardHeader title={props.trove.title} >\n            </CardHeader>\n            <ItemDialogModal trove={props.trove} setTroveId={props.setTroveId} itemId={props.itemId} setItemId={props.setItemId} onItemDelete={props.onItemDelete}/>\n            <img src={props.trove.imgurl} alt={props.trove.title} className={classes.root} />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n                    Description: {props.trove.description}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <AddItemDialogModal aria-label=\"Add Items\" trove={props.trove} setTroveId={props.setTroveId} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem}/>\n                <EditTroveDialogModal aria-label=\"edit\" trove={props.trove} Edit={props.Edit} setTroveId={props.setTroveId} newTrove={props.newTrove} onChange={props.onChange} />\n                {/* <ShareBtn aria-label=\"share\" trove={props.trove}/> */}\n                <DeleteTroveDialogModal aria-label=\"delete\" trove={props.trove} onDelete={props.onDelete} setTroveId={props.setTroveId} />\n            </CardActions>\n        </Card>\n    );\n}\nexport default TroveCard;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport NoTroveImg from \"../../images/Logos/TrovePageDefault.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    image: {\r\n        width: '950px',\r\n        height: '700px'\r\n    },\r\n    bodyDiv: {\r\n        fontSize: '20px',\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        marginBottom: '15px',\r\n    },\r\n}));\r\n\r\nconst NoTrove = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper elevation={1} className={classes.bodyDiv}>\r\n            <div>\r\n                <img className={classes.image} src={NoTroveImg} alt=\"No Trove\" />\r\n            </div>\r\n        </Paper>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NoTrove;","import React from 'react';\nimport TroveCard from '../TroveCard/index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport NoTroveDefault from '../NoTrove'\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        padding: \"10px\",\n        marginRight: '50px'\n    },\n    search: {\n        backgroundColor: '#FFFFFF',\n        border: '1px'\n    }\n}));\n\nconst MyTrove = (props) => {\n    const classes = useStyles();\n\n    return (\n\n        <Grid container direction=\"row\" spacing={1} className={classes.layout}>\n            {props.trove.troves\n                ? props.trove.troves.map((trove, key) => {\n                    return (\n                        <Grid item xs={4} md={3} key={key}>\n                            <TroveCard trove={trove} Edit={props.Edit} onDelete={props.onDelete} setTroveId={props.setTroveId} newTrove={props.newTrove} onChange={props.onChange} item={props.item} setItem={props.setItem} newItem={props.newItem} setNewItem={props.setNewItem} onItemChange={props.onItemChange} createItem={props.createItem} itemId={props.itemId} onItemDelete={props.onItemDelete} setItemId={props.setItemId}/>\n                        </Grid>)\n                })\n\n                : <Grid container alignItems='center' justify='center' spacing={2}>\n                    <Grid item>\n                        <NoTroveDefault />\n                    </Grid>\n                </Grid>\n            }\n        </Grid>\n    )\n}\n\n\n\nexport default MyTrove;\n","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0',\n    boxShadow: 'none',\n    margin: '15px'\n  },\n  root: {\n    backgroundColor: \"white\", \n    color: 'white'\n  }\n}));\n\nconst TroveForm = ({onAdd, onChange, newTrove, trove}) => {\n  const classes = useStyles();\n\n  return (\n  \n  <Card className={clsx(classes.alignItemsAndJustifyContent, classes.root)}>\n    <form onSubmit={onAdd}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={onChange}\n          error={newTrove.title === \"\"}\n          value={newTrove.title}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Description\"\n          name=\"description\"\n          onChange={onChange}\n          error={newTrove.description === \"\"}\n          value={newTrove.description}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          placeholder=\"Image URL\"\n          name=\"imgurl\"\n          onChange={onChange}\n          error={newTrove.imgurl === \"\"}\n          value={newTrove.imgurl}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary=\"true\" >Submit</Button>\n      </div>\n    </form>\n  </Card>\n)};\n\nexport default TroveForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport TroveForm from '../TroveForm'\n\nfunction TroveDialog(props) {\n  const { onClose, open, onChange, onAdd, newTrove } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} onChange={onChange} onAdd={onAdd} newTrove={newTrove}>\n      <DialogTitle id=\"simple-dialog-title\">Add New Trove</DialogTitle>\n      <TroveForm \n        onChange ={onChange}\n        onAdd = {onAdd}\n        newTrove = {newTrove}\n      />\n    </Dialog>\n  );\n}\n\nTroveDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function NewTroveDialogModal(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Trove\n      </Button>\n      <TroveDialog open={open} onClose={handleClose} newTrove={props.newTrove} onChange={props.onChange} onAdd={props.onAdd}/>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Auth from '../utils/Auth';\nimport MyTrove from '../components/MyTrove';\nimport Nav from '../components/Nav';\nimport SideBar from '../components/SideBar';\nimport API from '../utils/API';\nimport Avatar from '../components/Avatar';\nimport ProfileBanner from '../components/ProfileBanner';\nimport NewTroveDialogModal from \"../components/NewTroveDialogModal\";\nimport Grid from '@material-ui/core/Grid';\n\nconst TrovePage = (props) => {\n    const [user, setUser] = useState({});\n    const [trove, setTrove] = useState({});\n    const [newTrove, setNewTrove] = useState({\n        title: '',\n        description: '',\n        imgurl: ''\n    });\n    const [troveId, setTroveId] = useState();\n    const [itemId, setItemId] = useState();\n    const [item, setItem] = useState([]);\n    const [newItem, setNewItem] = useState({\n        url: '',\n        title: '',\n        price: '',\n        description: '',\n        imagesrc: '',\n    });\n\n    // console.log(user)\n    // console.log(trove.troves)\n\n    useEffect(() => {\n        // update authenticated state on logout\n        props.checkAuthenticateStatus()\n    }, [])\n\n    useEffect(() => {\n        API.dashboard(Auth.getToken())\n            .then(res => {\n                setUser(res.data.user)\n                console.log(res.data.user._id)\n                API.getTrove(res.data.user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n            });\n    }, [])\n\n    const onChange = (e) => {\n        setNewTrove({\n            ...newTrove,\n            [e.target.name]: e.target.value,\n        })\n    };\n\n    const onItemChange = (e) => {\n        setNewItem({\n            ...newItem,\n            [e.target.name]: e.target.value,\n        })\n    };\n\n    const onAdd = () => {\n        API.addTrove(user._id, newTrove).then(res => {\n            console.log(res)\n        })\n    }\n\n    const Edit = () => {\n        console.log(troveId)\n        API.editTrove(troveId, newTrove).then(res => {\n            console.log(res)\n        })\n    }\n\n    const onDelete = () => {\n        console.log(troveId)\n        API.deleteTrove(troveId, user._id).then(res => {\n            API.getTrove(user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n        })\n    }\n\n    const onItemDelete = () => {\n        console.log(troveId, itemId)\n        API.removeItem(troveId, itemId).then(res => {\n            API.getTrove(user._id, Auth.getToken())\n                    .then((trove) => {\n                        console.log(trove.data)\n                        setTrove(trove.data)\n                    })\n        })\n    }\n\n    const createItem = () => {\n        API.addItem(troveId, newItem).then(res => {\n            console.log(res)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={12}>\n                    <Nav />\n                </Grid>\n            </Grid>\n            <Grid container spacing={0} direction=\"row\">\n                <Grid item md={2} sm={2}>\n                    <SideBar />\n                </Grid>\n                <Grid item md={10} sm={10}>\n                    <ProfileBanner />\n                    <Avatar user={user} />\n                    <NewTroveDialogModal onChange={onChange} onAdd={onAdd} newTrove={newTrove} />\n                    <MyTrove trove={trove} Edit={Edit} setTroveId={setTroveId} newTrove={newTrove} onChange={onChange} onDelete={onDelete} item={item} setItem={setItem} newItem={newItem} setNewItem={setNewItem} onItemChange={onItemChange} createItem={createItem} itemId={itemId} setItemId={setItemId} onItemDelete={onItemDelete}/>\n\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n\n}\n\nexport default TrovePage;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from './utils/themeUtil';\nimport LogoutFunction from './pages/LogoutFunction';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n// import {\n//   PropsRoute,\n//   LoggedOutRoute\n// } from './components/Routes';\n\nimport LoginPage from './pages/LogInPage';\nimport LandingPage from './pages/LandingPage';\nimport SignupPage from './pages/SignupPage.js';\nimport ProfilePage from './pages/ProfilePage';\nimport DiscoverPage from './pages/DiscoverPage';\nimport FriendsPage from './pages/MyFriendsPage';\nimport TrovePage from './pages/TrovePage';\n\nimport Auth from './utils/Auth';\n\n// remove tap delay, essential for MaterialUI to work properly\n\nconst App = () => {\n\n  const [Authenticate, setAuthenticate] = useState({\n    authenticated: false\n  })\n  console.log(Authenticate)\n  useEffect(() => {\n    // check if user is logged in on refresh\n    toggleAuthenticateStatus()\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      Auth.deauthenticateUser()\n    }\n  }, []);\n\n  const toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    setAuthenticate({ authenticated: Auth.isUserAuthenticated() })\n\n  }\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Switch>\n          <Route exact path='/' render={(props) => <LandingPage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/login' render={(props) => <LoginPage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/signup' component={SignupPage} />\n          <Route exact path='/profile' render={(props) => <ProfilePage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/trove' render={(props) => <TrovePage {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n          <Route exact path='/discover' component={DiscoverPage} />\n          <Route exact path='/friends' component={FriendsPage} />\n          <Route path=\"/logout\" render={(props) => <LogoutFunction {...props} checkAuthenticateStatus={toggleAuthenticateStatus} />} />\n        </Switch>\n      </ThemeProvider>\n    </Router >\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDom.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/TroveLogo.c3249b80.png\";"],"sourceRoot":""}